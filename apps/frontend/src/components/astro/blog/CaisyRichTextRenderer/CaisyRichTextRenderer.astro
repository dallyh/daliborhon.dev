---
import * as m from "$messages";
import RichTextRenderer from "@caisy/rich-text-astro-renderer";
import CodeBlock from "./nodes/CodeBlock.astro";
import DocumentLink from "./nodes/DocumentLink.astro";
import Heading from "./nodes/Heading.astro";
import { generateTableOfContents } from "./utils/generateTableOfContents";
import type { HeadingNode } from "./utils/types";

export interface Props {
    richTextJson?: any;
    connections?: any;
    generateToc?: boolean;
    maxTocDepth?: number;
}

const { richTextJson, connections, generateToc = false, maxTocDepth } = Astro.props;

const overwrites = {
    codeBlock: CodeBlock,
    documentLink: DocumentLink,
    heading: Heading,
};

const headings: HeadingNode[] = richTextJson.content.filter((node: HeadingNode) => {
    return node.type === "heading";
});
---

{
    generateToc && headings.length !== 0 && (
        <div id="toc">
            <details>
                <h2>{m.blog__toc()}</h2>
                <summary>{m.blog__open_toc}</summary>
                <nav class="toc">
                    <Fragment set:html={generateTableOfContents(headings, maxTocDepth)} />
                </nav>
            </details>
        </div>
    )
}

<RichTextRenderer node={richTextJson} overwrites={overwrites} connections={connections} />

<style is:global>
    .toc {
        ol {
            list-style: inside disc;

            li a {
                &:visited {
                    color: var(--a-color);
                }
            }
        }
    }
</style>

<style>
    details {
        cursor: pointer;
        user-select: none;
        display: inline-block;
        list-style: inside disclosure-closed;
        margin-bottom: 1rem;
        background: rgba(var(--secondary), 0.5);
        padding: 0.5rem;
        border-radius: var(--border-radius);
        width: 100%;
        border: var(--border);
        overflow: hidden;

        h2 {
            margin-top: 1rem;
            margin-bottom: 1rem;
        }
    }

    details[open] > summary:first-of-type {
        list-style-type: disclosure-open;
    }
</style>
