---
import PostPreview from "@components/astro/blog/PostPreview.astro";
import AllEntriesUrl from "@components/astro/global/AllEntriesUrl.astro";
import type { Post } from "@services/sanity/queries/posts";
import type { Page } from "astro";

interface Props {
	posts: Post[] | Page<Post>;
	url?: string;
	urlDescription?: string;
}

const { posts, url, urlDescription } = Astro.props;

function isPage<T>(value: any): value is Page<T> {
	return value && value.data && Array.isArray(value.data);
}
---

<div>
	<ul>
		{
			Array.isArray(posts) &&
				posts.map((post) => (
					<li>
						<PostPreview post={post} />
					</li>
				))
		}
		{
			isPage(posts) &&
				posts.data.map((post) => (
					<li>
						<PostPreview post={post} />
					</li>
				))
		}
	</ul>
	{url && urlDescription && <AllEntriesUrl {url} {urlDescription} />}
</div>

<style>
	ul {
		display: grid;
		grid-template-columns: repeat(3, minmax(0, 1fr));
		gap: 1rem;
		margin-bottom: 2rem;

		@media (max-width: 768px) {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}

		@media (max-width: 468px) {
			grid-template-columns: repeat(1, minmax(0, 1fr));
		}
	}
</style>
