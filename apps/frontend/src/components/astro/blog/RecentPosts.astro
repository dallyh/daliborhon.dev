---
import * as m from "$messages";
import { recentPostsQuery, type Post } from "@services/sanity/queries/posts";
import { runQuery } from "@services/sanity/runQuery";
import Section from "../global/Section.astro";
import PostsGrid from "./PostsGrid.astro";

interface Props {
    posts: Post[];
    postSize?: number;
    filterFeatured?: boolean;
    showSeeAllUrl?: boolean;
}

const { filterFeatured = false, showSeeAllUrl = true, posts = [] } = Astro.props;

let recentPosts = posts;
if (filterFeatured) {
    recentPosts = posts?.filter((post) => {
        return post?.featured === false || post?.featured === undefined;
    });
}

const sectionProps = {
    id: "recentPosts",
    sectionTitle: m.blog__recent_posts_title(),
    sectionDescription: m.blog__recent_posts_description(),
};
---

<Section {...sectionProps}>
    {!recentPosts && <p>{m.blog__no_posts()} ðŸ˜ž</p>}
    {recentPosts && recentPosts.length === 0 && <p>{m.blog__no_posts()} ðŸ˜ž</p>}
    {
        recentPosts && recentPosts.length !== 0 && (
            <>
                {showSeeAllUrl && <PostsGrid posts={recentPosts} url="/blog/posts/" urlDescription={m.blog__see_all_posts()} />}
                {!showSeeAllUrl && <PostsGrid posts={recentPosts} />}
            </>
        )
    }
</Section>
