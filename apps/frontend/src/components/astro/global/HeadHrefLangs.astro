---
import type { CollectionEntry } from "astro:content";
import { getAbsoluteLocaleUrl } from "astro:i18n";
import { defaultLocale, locales, type AllowedLocales } from "@daliborhon.dev/integrations/astro-i18n";
import { getPathFromUrl } from "@daliborhon.dev/integrations/astro-i18n";
import { getAbsoluteBlogPostUrl, getBlogPostTranslations } from "@utils/content";

interface Props {
	post?: CollectionEntry<"posts">;
}
const { post } = Astro.props;
---

<Fragment>
	<link rel="alternate" hreflang="x-default" href={getAbsoluteLocaleUrl(defaultLocale, getPathFromUrl(Astro.url, import.meta.env.BASE_URL))} />
	{!post && locales.map((locale) => <link rel="alternate" hreflang={locale} href={getAbsoluteLocaleUrl(locale, getPathFromUrl(Astro.url, import.meta.env.BASE_URL))} />)}
	{
		post &&
			(async () => {
				const posts = await getBlogPostTranslations(post);
				return posts.map(async (post) => {
					const value = getAbsoluteBlogPostUrl(post.data.language as AllowedLocales, post);
					return <link rel="alternate" hreflang={post.data.language} href={value} />;
				});
			})
	}
</Fragment>
