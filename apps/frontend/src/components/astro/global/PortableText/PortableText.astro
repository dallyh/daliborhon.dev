---
import { PortableText as PortableTextInternal } from "astro-portabletext";
import Code from "./components/CodeBlock.astro";
import IconManager from "./components/IconManager.astro";
import Link from "./components/Link.astro";
import SanityImage from "./components/SanityImage.astro";
import Table from "./components/Table.astro";
import YouTube from "./components/YouTube.astro";
import type { ContentBlock } from "@services/sanity/schemas/contentBlockSchema";
import TableOfContents from "./components/TableOfContents.astro";
import type { Heading } from "@services/sanity/queries/posts";
import HeadingBlock from "./components/HeadingBlock.astro";
import { parseOutline } from "./utils/headingUtils";
import * as m from "$messages";

interface Props {
	value: ContentBlock;
	headings?: Heading[];
}

const { value, headings } = Astro.props;

const components = {
	type: {
		youtube: YouTube,
		image: SanityImage,
		code: Code,
		"icon.manager": IconManager,
		table: Table,
	},
	block: {
		h1: HeadingBlock,
		h2: HeadingBlock,
		h3: HeadingBlock,
		h4: HeadingBlock,
		h5: HeadingBlock,
		h6: HeadingBlock,
	},
	mark: {
		link: Link,
	},
};
---

{
	headings && (
		<div id="toc">
			<details>
				<h2>{m.blog__toc()}</h2>
				<summary>{m.blog__open_toc}</summary>
				<nav class="toc">
					<TableOfContents headings={parseOutline(headings)} />
				</nav>
			</details>
		</div>
	)
}
<div class="portable-text">
	<PortableTextInternal {value} {components} />
</div>

<style>
	.portable-text:has(svg) {
		display: inline-flex;
		justify-content: center;
		align-items: center;
		height: max-content;

		svg {
			display: inline-flex;
			margin-right: 0.5rem;
		}
	}

	.toc {
		ol {
			list-style: inside disc;

			li a {
				&:visited {
					color: var(--a-color);
				}
			}
		}
	}

	details {
		cursor: pointer;
		user-select: none;
		display: inline-block;
		list-style: inside disclosure-closed;
		margin-bottom: 1rem;
		background: rgba(var(--secondary), 0.5);
		padding: 0.5rem;
		border-radius: var(--border-radius);
		width: 100%;
		border: var(--border);
		overflow: hidden;

		h2 {
			margin-top: 1rem;
			margin-bottom: 1rem;
		}
	}

	details[open] > summary:first-of-type {
		list-style-type: disclosure-open;
	}
</style>
