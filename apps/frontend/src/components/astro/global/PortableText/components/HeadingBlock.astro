---
import { getHeadingSlug } from "../utils/headingUtils";

const props = Astro.props;
const { node, index, isInline, ...attrs } = props;
const styleIs = (style: string) => style === node.style;

const id = getHeadingSlug(node);
const href = `#${id}`;
---

{
	styleIs("h1") ? (
		<h1 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h1>
	) : styleIs("h2") ? (
		<h2 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h2>
	) : styleIs("h3") ? (
		<h3 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h3>
	) : styleIs("h4") ? (
		<h4 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h4>
	) : styleIs("h5") ? (
		<h5 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h5>
	) : styleIs("h6") ? (
		<h6 {...attrs} id={id}>
			<slot />
			<a aria-hidden="true" tabindex="-1" href={href}>
				<span class="icon icon-link" />
			</a>
		</h6>
	) : (
		<div style="color: red;">Unkown heading block!</div>
	)
}

<style>
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		scroll-margin-top: calc(var(--header-height) + 1rem);

		/* Generated by rehype autolinks */
		a {
			position: relative;
			margin-left: 0.25rem;
			display: none;

			&::before {
				content: "#";
			}

			&:visited {
				color: var(--a-color);
			}

			.icon .icon-link {
				display: none;
			}
		}

		&:hover {
			a {
				display: inline-block;
			}
		}
	}
</style>
