---
import * as m from "$messages";
import FeaturedPosts from "@components/astro/blog/FeaturedPosts.astro";
import RecentPosts from "@components/astro/blog/RecentPosts.astro";
import Section from "@components/astro/global/Section.astro";
import Intro from "@components/astro/home/Intro.astro";
import ProjectsList from "@components/astro/projects/ProjectsList.astro";
import { siteConfig } from "@daliborhon.dev/shared/frontend";
import { locales } from "@daliborhon.dev/shared/frontend/i18n";
import { getRoutingLocale } from "@i18n/utils";
import PageLayout from "@layouts/PageLayout.astro";
import { recentFeaturedPostsQuery, recentPostsQuery } from "@services/sanity/queries/posts";
import { allProjectsQuery } from "@services/sanity/queries/projects";
import { runQuery } from "@services/sanity/runQuery";

/**
 * The "index" is here on purpose. Without it, Astro prerenders the index.astro as "cs.html" or "en.html".
 * ▶ src/pages/[...lang]/index.astro
 * ├─ /cs.html (+2ms)
 * └─ /en.html (+1ms)
 * And for whatever reason the HTML file is never outputted to the dist directory, only other files exists under the locale route.
 * Maybe it has to do something with i18n routing and the way I use the [...lang] parameter, but I haven't had much time to investigate it.
 * Also while running the dev mode, it is not correctly picked up when the parameter is set to "index" so here it has to be undefined.
 * The build is set to "file", see the config file for more details.
 */
export async function getStaticPaths() {
	const paths = locales.map((locale) => {
		return { params: { lang: getRoutingLocale(locale), index: import.meta.env.DEV ? undefined : "index" }, props: { lang: locale } };
	});

	return paths;
}

const { lang } = Astro.props;
const projects = await runQuery(allProjectsQuery(siteConfig.projects.recentProjectsSize), { language: lang });
const recentPosts = await runQuery(recentPostsQuery(siteConfig.blog.recentPostsSize), { language: lang });
const featuredPosts = await runQuery(recentFeaturedPostsQuery(siteConfig.blog.featuredPostsSize), { language: lang });

const layoutProps = {
	title: "Dalibor Hon - " + m.common__home_page(),
	description: m.common__site_description(),
	homepage: true,
};
---

<PageLayout {...layoutProps}>
	<Section id="hero">
		<Intro />
	</Section>
	<Section id="projects" sectionTitle={m.projects__projects_title()}>
		<ProjectsList {projects} />
	</Section>
	<FeaturedPosts posts={featuredPosts} />
	<RecentPosts posts={recentPosts} />
</PageLayout>
