---
import { slugifyStr } from "@utils";
import { attrsToStyle } from "../utils/attrsToStyle";

const { node } = Astro.props;
const attrs = node.attrs;
const level = node.attrs?.level;
const text = node.content[0].text;
const href = `#${slugifyStr(undefined, text)}`;
const id = slugifyStr(undefined, text);
const style = attrsToStyle(attrs);
---

{
    () => {
        switch (level) {
            case 1:
                return (
                    <>
                        <h1 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h1>
                    </>
                );
            case 2:
                return (
                    <>
                        <h2 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h2>
                    </>
                );
            case 3:
                return (
                    <>
                        <h3 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h3>
                    </>
                );
            case 4:
                return (
                    <>
                        <h4 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h4>
                    </>
                );
            case 5:
                return (
                    <>
                        <h5 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h5>
                    </>
                );
            case 6:
                return (
                    <>
                        <h6 style={style} id={id}>
                            <slot />
                            <a aria-hidden="true" tabindex="-1" href={href}>
                                <span class="icon icon-link" />
                            </a>
                        </h6>
                    </>
                );
            default:
                return (
                    <>
                        <div>Wrong heading in rich text!</div>
                    </>
                );
        }
    }
}

<style>
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        scroll-margin-top: calc(var(--header-height) + 1rem);

        /* Generated by rehype autolinks */
        a {
            position: relative;
            margin-left: 0.25rem;
            display: none;

            &::before {
                content: "#";
            }

            &:visited {
                color: var(--a-color);
            }

            .icon .icon-link {
                display: none;
            }
        }

        &:hover {
            a {
                display: inline-block;
            }
        }
    }
</style>
