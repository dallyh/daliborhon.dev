---
import { getCollection, type CollectionEntry } from "astro:content";
import { getLocale } from "@i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getCategoryDescriptionByLocale, getCategoryTitleByLocale } from "@utils/getCategoryByLocale";
import { Icon } from "astro-icon/components";
import SmallBlogPostPreview from "./SmallBlogPostPreview.astro";
import BlogPostPreview from "./BlogPostPreview.astro";

interface Props {
    category: CollectionEntry<"categories">;
}

const { category } = Astro.props;
const locale = getLocale(Astro.url);

const title = await getCategoryTitleByLocale(locale, category.id);
const description = await getCategoryDescriptionByLocale(locale, category.id);
const url = getRelativeLocaleUrl(locale, `/blog/categories/${category.id}`);

const categoryPosts = await getCollection("posts", ({ data }) => {
    return data.hidden == false && data.language === locale && data.category?.id === category.id;
});

// Only last 3 recent
const filteredPosts = categoryPosts
    .sort((a, b) => {
        return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
    })
    .slice(0, 3);
---

<li class="category">
    <h2 class="title">
        <a href={url}>
            {title}
        </a>
    </h2>
    <p class="description">
        <i><Icon name="bi:arrow-return-right" /></i>
        <span>{description}</span>
    </p>
    {
        filteredPosts.length !== 0 && (
            <ul class="category-post-list">
                {filteredPosts.map((post) => (
                    <li>
                        <SmallBlogPostPreview post={post} />
                    </li>
                ))}
            </ul>
        )
    }
    {filteredPosts.length === 0 && <p class="category-post-list">There are currently no posts in this category.</p>}
</li>

<style>
    .category {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        width: 100%;

        h2 {
            a:visited {
                color: rgba(var(--accent), 1);
            }
        }

        .title {
            display: flex;
            align-items: center;
        }

        .description {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-left: 0.4rem;
        }

        .category-post-list {
            display: grid;
            gap: 1rem;
            margin-top: 0.8rem;
            margin-bottom: 0.8rem;
        }
    }
</style>
