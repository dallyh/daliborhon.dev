---
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import BlogPostPreview from "@components/astro/blog/BlogPostPreview.astro";
import { BLOG } from "@config/blog";
import { getRelativeLocaleUrl } from "astro:i18n";
import { loadNamespaces, t } from "@i18n/i18n";
import { Icon } from "astro-icon/components";
import Section from "../global/Section.astro";

interface Props {
    postSize?: number;
}

const { postSize = BLOG.featuredPostsSize } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog"]);

//Blogs
const allPosts = await getCollection("posts", ({ data }) => {
    return data.language === locale && !data.hidden && data.featured;
});

const filteredPosts = allPosts
    .sort((a, b) => {
        return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
    })
    .slice(0, postSize);
---

<Section id="featuredPosts" sectionTitle={t("blog.featured_posts_title")} sectionDescription={t("blog.featured_posts_description")}>
    <ul class="post-list">
        {
            filteredPosts.map((post) => (
                <li>
                    <BlogPostPreview post={post} />
                </li>
            ))
        }
        {filteredPosts.length === 0 && <p>{t("blog.no_featured_posts")} ðŸ˜ž</p>}
    </ul>
    <div class="all-posts">
        <a href={getRelativeLocaleUrl(locale, "/blog/posts/featured")}>{t("blog.see_all_featured")}<i><Icon name="bi:arrow-right" /></i></a>
    </div>
</Section>
