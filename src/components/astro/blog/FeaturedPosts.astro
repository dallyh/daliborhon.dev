---
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import BlogPostPreview from "@components/astro/blog/BlogPostPreview.astro";
import { BLOG } from "@config/blog";
import { getRelativeLocaleUrl } from "astro:i18n";
import { loadNamespaces, t } from "@i18n/i18n";

interface Props {
    postSize?: number;
}

const { postSize = BLOG.featuredPostsSize } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog"]);

//Blogs
const allPosts = await getCollection("posts", ({ data }) => {
    return data.language === locale && !data.hidden && data.featured;
});

const filteredPosts = allPosts.sort((a, b) => {
    return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
}).slice(0, postSize);
---

<ul>
    {
        filteredPosts.map((post) => (
            <li>
                <BlogPostPreview post={post} />
            </li>
        ))
    }
    {filteredPosts.length === 0 && <p>{t("blog.no_featured_posts")} ðŸ˜ž</p>}
</ul>
<div class="all-posts">
    <a href={getRelativeLocaleUrl(locale, "/blog/posts/featured")}>{t("blog.see_all_featured")}</a>
    <i class="bi bi-arrow-right"></i>
</div>

<style>
    ul {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    p {
        display: flex;
        justify-content: center;
    }
</style>
