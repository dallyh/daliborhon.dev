---
import type { CollectionEntry } from "astro:content";
import PostPreview from "@components/astro/blog/PostPreview.astro";
import AllEntriesUrl from "@components/astro/global/AllEntriesUrl.astro";
import type { Page } from "astro";

interface Props {
	posts: CollectionEntry<"posts">[] | Page<CollectionEntry<"posts">>;
	url?: string;
	urlDescription?: string;
}

const { posts, url, urlDescription } = Astro.props;

function isPage<T>(value: any): value is Page<T> {
	return value && value.data && Array.isArray(value.data);
}
---

<div class="fixed-grid has-3-cols has-1-cols-mobile">
	<ul class="grid">
		{
			Array.isArray(posts) &&
				posts.map((post) => (
					<li class="cell">
						<PostPreview post={post} />
					</li>
				))
		}
		{
			isPage(posts) &&
				posts.data.map((post) => (
					<li class="cell">
						<PostPreview post={post} />
					</li>
				))
		}
	</ul>
	{url && urlDescription && <AllEntriesUrl {url} {urlDescription} />}
</div>

<style>
	ul {
		list-style: none;
	}
</style>
