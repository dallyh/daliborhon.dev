---
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import BlogPostPreview from "@components/astro/blog/BlogPostPreview.astro";
import { BLOG } from "src/config/blog";
import { getRelativeLocaleUrl } from "astro:i18n";
import { loadNamespaces, t } from "@i18n/i18n";
import { Icon } from "astro-icon/components";

interface Props {
    postSize?: number;
    filterFeatured?: boolean;
}

const { postSize = BLOG.recentPostsSize, filterFeatured = false } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog"]);

//Blogs
const allPosts = await getCollection("posts", ({ data }) => {
    return data.language === locale && !data.hidden && (filterFeatured ? !data.featured : true);
});

const filteredPosts = allPosts.sort((a, b) => {
    return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
}).slice(0, postSize);
---

<ul class="post-list">
    {
        filteredPosts.map((post) => (
            <li>
                <BlogPostPreview post={post} />
            </li>
        ))
    }
</ul>

<div class="all-posts">
    <a href={getRelativeLocaleUrl(locale, "/blog/posts/")}>{t("blog.see_all_posts")}<i><Icon name="bi:arrow-right" /></i></a>
</div>
