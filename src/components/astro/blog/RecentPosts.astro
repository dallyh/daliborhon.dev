---
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import BlogPostPreview from "@components/astro/blog/BlogPostPreview.astro";
import { BLOG } from "src/config/blog";
import { getRelativeLocaleUrl } from "astro:i18n";
import { loadNamespaces, t } from "@i18n/i18n";
import { Icon } from "astro-icon/components";
import Section from "../global/Section.astro";
import PostsGrid from "./PostsGrid.astro";

interface Props {
    postSize?: number;
    filterFeatured?: boolean;
    showSeeAllUrl?: boolean;
}

const { postSize = BLOG.recentPostsSize, filterFeatured = false, showSeeAllUrl = true } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog"]);

//Blogs
const allPosts = await getCollection("posts", ({ data }) => {
    return data.language === locale && !data.hidden && (filterFeatured ? !data.featured : true);
});

const filteredPosts =
    allPosts === undefined
        ? undefined
        : allPosts
              .sort((a, b) => {
                  return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
              })
              .slice(0, postSize);

const sectionProps = {
    id: "recentPosts",
    sectionTitle: t("blog.recent_posts_title"),
    sectionDescription: t("blog.recent_posts_description"),
};
---

<Section {...sectionProps}>
    {!filteredPosts && <p>{t("blog.no_posts")} ðŸ˜ž</p>}
    {filteredPosts && filteredPosts.length === 0 && <p>{t("blog.no_posts")} ðŸ˜ž</p>}
    {
        filteredPosts && filteredPosts.length !== 0 && (
            <>
                {showSeeAllUrl && <PostsGrid posts={filteredPosts} url="/blog/posts/" urlDescription={t("blog.see_all_posts")} />}
                {!showSeeAllUrl && <PostsGrid posts={filteredPosts} />}
            </>
        )
    }
</Section>
