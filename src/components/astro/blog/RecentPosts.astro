---
import { loadNamespaces, t } from "@i18n/i18n";
import { getLocale } from "@i18n/utils";
import { BLOG } from "src/config/blog";
import Section from "../global/Section.astro";
import PostsGrid from "./PostsGrid.astro";
import { getRecentBlogArticlesByLocale } from "@services/content/getRecentBlogArticlesByLocale";

interface Props {
    postSize?: number;
    filterFeatured?: boolean;
    showSeeAllUrl?: boolean;
}

const { postSize = BLOG.recentPostsSize, filterFeatured = false, showSeeAllUrl = true } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog"]);

//Blogs
let posts = await getRecentBlogArticlesByLocale({locale, first: postSize});
if (filterFeatured) {
    posts = posts?.filter((post) => {
        return post?.featured === false || post?.featured === undefined
    })
}

const sectionProps = {
    id: "recentPosts",
    sectionTitle: t("blog.recent_posts_title"),
    sectionDescription: t("blog.recent_posts_description"),
};
---

<Section {...sectionProps}>
    {!posts && <p>{t("blog.no_posts")} ðŸ˜ž</p>}
    {posts && posts.length === 0 && <p>{t("blog.no_posts")} ðŸ˜ž</p>}
    {
        posts && posts.length !== 0 && (
            <>
                {showSeeAllUrl && <PostsGrid posts={posts} url="/blog/posts/" urlDescription={t("blog.see_all_posts")} />}
                {!showSeeAllUrl && <PostsGrid posts={posts} />}
            </>
        )
    }
</Section>
