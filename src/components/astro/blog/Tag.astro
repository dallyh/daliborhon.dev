---
import { getCollection, type CollectionEntry } from "astro:content";
import { getLocale } from "@i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getCategoryDescriptionByLocale, getCategoryTitleByLocale } from "@utils/getCategoryByLocale";
import { Icon } from "astro-icon/components";
import SmallBlogPostPreview from "./SmallBlogPostPreview.astro";
import { getTagByLocale } from "@utils/getTagByLocale";
import { t } from "@i18n/i18n";
import PostsList from "./PostsList.astro";

interface Props {
    tag: CollectionEntry<"tags">;
}

const { tag } = Astro.props;
const locale = getLocale(Astro.url);

const title = await getTagByLocale(locale, tag.id);
const url = getRelativeLocaleUrl(locale, `/blog/tags/${tag.id}/`);

const tagPosts = await getCollection("posts", ({ data }) => {
    return !data.hidden && data.language === locale && data.tags.find((tag) => tag.id === tag.id);
});

// Only last 3 recent
const filteredPosts =
    tagPosts === undefined
        ? undefined
        : tagPosts
              .sort((a, b) => {
                  return new Date(b.data.pubDateTime).valueOf() - new Date(a.data.pubDateTime).valueOf();
              })
              .slice(0, 3);
---

<li class="tag">
    <h2 class="title">
        <a href={url}>
            <i>
                <Icon name="bi:tag" />
            </i>
            {title}
        </a>
    </h2>
    {!filteredPosts && <p class="category-post-list">{t("blog.no_tagged_posts")} {title}</p>}
    {filteredPosts && filteredPosts.length === 0 && <p class="category-post-list">{t("blog.no_tagged_posts")}{title}</p>}
    {
        filteredPosts && filteredPosts.length !== 0 && (
            <>
                <PostsList posts={filteredPosts} />
            </>
        )
    }
</li>

<style>
    .tag {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        width: 100%;

        h2 {
            a {
                display: flex;
                gap: 0.3rem;
            }

            svg {
                margin-top: 0.2rem;
            }

            a:visited {
                color: rgba(var(--accent), 1);
            }
        }
    }
</style>
