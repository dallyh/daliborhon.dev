---
import * as m from "$messages";
import type { MarkdownHeading } from "astro";

interface Props {
	tocPosition?: "inside" | "default";
	headings?: MarkdownHeading[];
}

const { tocPosition = "default", headings } = Astro.props;
---

<markdown-content>
	<article class=`prose lg:prose-xl md-content max-w-none ${tocPosition}` id="article">
		{
			headings && headings.length !== 0 && (
				<div id="toc" class="box">
					<details id="tocDetails">
						<summary class="title is-size-6">{m.blog__toc()}</summary>
					</details>
				</div>
			)
		}
		<div id="content">
			<slot />
		</div>
	</article>
</markdown-content>

<script>
	class MarkdownContent extends HTMLElement {
		private details: HTMLDetailsElement | null = null;

		connectedCallback() {
			this.details = this.querySelector<HTMLDetailsElement>("#tocDetails");

			if (!this.details) {
				return;
			}

			this.initToc();

			document.addEventListener("astro:after-swap", () => this.initToc());
		}

		private initToc() {
			if (!this.details) {
				// Check again in case the element is removed
				return;
			}

			const toc = this.querySelector<HTMLElement>(".toc")!;
			this.details.appendChild(toc);

			toc.style.display = "block";

			this.openToc(this.details);
			window.addEventListener("resize", () => this.openToc(this.details!));
		}

		private openToc(details: HTMLDetailsElement) {
			const width = window.innerWidth;

			if (width < 1024) {
				details.open = false;
			} else {
				details.open = true;
			}
		}
	}

	customElements.define("markdown-content", MarkdownContent);
</script>

<style>
	.md-content {
		position: relative;
		width: 100%;
	}

	@media screen and (min-width: 1024px) {
		.md-content {
			&.inside {
				display: grid;
				grid-template-columns: 1fr min-content;
				grid-template-rows: 1fr;
				gap: 2rem;

				#content {
					grid-row: 1;
					grid-column: 1; /* 1 / 3 */
				}

				#toc {
					z-index: 2;
					grid-row: 1;
					grid-column: 2;
					position: sticky;
					top: calc(var(--bulma-navbar-height) + 0.5rem); /* Navbar */
					max-height: max-content;

					/* Remove Bulma Box styling */
					padding: 0;
					min-width: 250px;
					box-shadow: unset;
					background-color: unset;
				}

				/* Maybe for future enhancement */
				/* Makes the content full width */
				/*&:has(details[open]) {
					#content {
						grid-column: 1;
					}

					#toc {
						padding: 0;
						min-width: 250px;
						box-shadow: none;
						background-color: none;
					}
				}*/
			}
		}
	}
</style>

<style is:global>
	.md-content {
		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			position: relative;
			/* Generated by rehype autolinks */

			a {
				margin-left: 0.5rem;
				font-size: 1rem;

				.heading-link-icon {
					background-color: var(--bulma-link-text);
					position: relative;
					display: inline-block;
					width: 16px;
					height: 16px;
					mask: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>');
					mask-repeat: no-repeat;
					mask-position: center;
					mask-size: cover;
				}
			}
		}

		figure:not([class]) {
			margin: 0;

			img {
				border: 1px solid transparent;
				border-radius: var(--bulma-radius-large);
			}
		}
	}

	nav.toc {
		display: none; /* This is generated */
	}

	#toc {
		summary::marker,
		summary::-webkit-details-marker {
			display: none;
		}

		summary {
			list-style: none;
			pointer-events: none;
		}
	}

	@media screen and (max-width: 1024px) {
		#toc {
			summary::marker,
			summary::-webkit-details-marker {
				display: none;
			}

			summary:before {
				content: "";
				border-width: 0.4rem;
				border-style: solid;
				border-color: transparent transparent transparent var(--bulma-text);
				position: absolute;
				top: 50%;
				left: 0rem;
				transform: translateY(-50%) rotate(0);
				transform-origin: 0.2rem 50%;
				transition: 0.25s transform ease;
			}

			details[open] > summary:before {
				transform: translateY(-50%) rotate(90deg);
			}

			details[open] > summary {
				margin-bottom: 1rem;
			}

			summary {
				pointer-events: all;
				padding-left: 1rem;
				margin-bottom: 0;
				position: relative;
				cursor: pointer;

				&:focus {
					outline: none;
					border-color: hsl(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l)) !important;
					box-shadow: var(--bulma-focus-shadow-size) hsla(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l), var(--bulma-focus-shadow-alpha)) !important;
				}
			}
		}
	}
</style>
