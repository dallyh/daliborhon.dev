---
import type { CollectionEntry } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import * as m from "$messages";
import { Icon } from "astro-icon/components";
import LanguageSelector from "./LanguageSelector.astro";
import Search from "./Search.astro";
import ThemeSelect from "./ThemeSelect.astro";

interface Props {
	post?: CollectionEntry<"posts">;
}

const { post } = Astro.props;

const locale = Astro.currentLocale!;
---

<header id="nav-menu" class="nav-menu" aria-label="navigation bar">
	<site-navigation>
		<nav class="navbar container" role="navigation" aria-label="main navigation">
			<div class="navbar-brand">
				<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/")} title={m.common__home()} aria-label={m.common__home()}>
					<Icon class="logo" name="dh-logo" size={40} />
				</a>
				<a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbarTop">
					<span aria-hidden="true"></span>
					<span aria-hidden="true"></span>
					<span aria-hidden="true"></span>
					<span aria-hidden="true"></span>
				</a>
			</div>
			<div id="navbarTop" class="navbar-menu">
				<div class="navbar-start">
					<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/")} aria-label={m.common__home()}>
						{m.common__home()}
					</a>
					<div class="navbar-item has-dropdown is-hoverable">
						<a class="navbar-link" href={getRelativeLocaleUrl(locale, "/blog")} aria-label={m.common__blog()}>
							{m.common__blog()}
						</a>
						<div class="navbar-dropdown is-boxed">
							<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/blog/posts/")} aria-label={m.blog__all_posts_title()}>
								{m.blog__all_posts_title()}
							</a>
							<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/blog/posts/featured")} aria-label={m.blog__featured_posts_title()}>
								{m.blog__featured_posts_title()}
							</a>
							<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/blog/tags")} aria-label={m.blog__tags()}>
								{m.blog__tags()}
							</a>
						</div>
					</div>
					<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/projects")} aria-label={m.projects__projects()}>
						{m.projects__projects()}
					</a>
					<div class="navbar-item has-dropdown is-hoverable">
						<a class="navbar-link" href={getRelativeLocaleUrl(locale, "/about")} aria-label={m.common__about()}>
							{m.common__about()}
						</a>
						<div class="navbar-dropdown is-boxed">
							<a class="navbar-item" href={getRelativeLocaleUrl(locale, "/about/resume")} aria-label={m.common__resume()}>
								{m.common__resume()}
							</a>
						</div>
					</div>
				</div>

				<div class="navbar-end">
					<div class="level">
						<div class="level-item">
							<div class="navbar-item">
								<Search />
							</div>
							<div class="navbar-item">
								<LanguageSelector post={post} />
							</div>
							<div class="navbar-item">
								<ThemeSelect />
							</div>
						</div>
					</div>
				</div>
			</div>
		</nav>
	</site-navigation>
</header>

<script>
	class Navigation extends HTMLElement {
		connectedCallback() {
			const navbarBurger = this.querySelector<HTMLAnchorElement>(".navbar-burger");

			if (!navbarBurger) {
				console.warn("Navigation: No .navbar-burger element found within the component.");
				return;
			}

			navbarBurger.addEventListener("click", () => {
				const target = navbarBurger.dataset.target;

				const targetElement = this.querySelector(`#${target}`);

				if (!target || !targetElement) {
					console.warn("Navigation: Missing target element or data-target attribute.");
					return;
				}

				navbarBurger.classList.toggle("is-active");
				targetElement.classList.toggle("is-active");
			});
		}
	}

	customElements.define("site-navigation", Navigation);
</script>

<style>
	.nav-menu {
		position: sticky;
		top: 0;
		z-index: 1000;
		border-bottom: 1px solid hsl(0, 0%, 70%);

		[data-theme="dark"] & {
			border-bottom: 1px solid hsl(0, 0%, 20%);
		}
	}

	.navbar-dropdown {
		border: 1px solid hsl(0, 0%, 70%);

		[data-theme="dark"] & {
			border: 1px solid hsl(0, 0%, 20%);
		}

		@media (max-width: 1024px) {
			border: unset;

			[data-theme="dark"] & {
				border: unset;
			}
		}
	}

	.navbar {
		--bulma-navbar-burger-color: var(--bulma-text-strong);
	}
</style>
