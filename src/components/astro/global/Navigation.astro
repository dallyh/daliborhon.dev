---
import { getLocale } from "@i18n/utils";
import { loadNamespaces, t } from "@i18n/i18n";
import LanguageSelector from "./LanguageSelector.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import type { CollectionEntry } from "astro:content";

interface Props {
    title: string;
    homePage?: boolean;
    post?: CollectionEntry<"posts">;
}

const { homePage = false, title, post } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
const namespaces = ["navigation"];
await loadNamespaces(locale, namespaces);
---

<header>
    <div class="header-items">
        <div class="control">
            <button class="header-burger-menu">
                <div class="header-burger-menu-button" id="menuButton">
                    <span></span>
                </div>
            </button>
            <div class="brand">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-code-slash" viewBox="0 0 16 16">
                    <path
                        d="M10.478 1.647a.5.5 0 1 0-.956-.294l-4 13a.5.5 0 0 0 .956.294l4-13zM4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 0 1-.708.708l-3.5-3.5a.5.5 0 0 1 0-.708l3.5-3.5a.5.5 0 0 1 .708 0zm6.292 0a.5.5 0 0 0 0 .708L14.293 8l-3.147 3.146a.5.5 0 0 0 .708.708l3.5-3.5a.5.5 0 0 0 0-.708l-3.5-3.5a.5.5 0 0 0-.708 0z"
                    ></path>
                </svg>
                <h1>{title}</h1>
            </div>
        </div>
        <nav class="nav-dropdown" id="siteNav">
            <ul>
                <li>
                    <a href={getRelativeLocaleUrl(locale, "/home")}>{t("navigation:home")}</a>
                </li>
                <li>
                    <a href={getRelativeLocaleUrl(locale, "/resume")}>{t("navigation:resume")}</a>
                </li>
                <li>
                    {homePage && <a href="#contact">{t("navigation:contact")}</a>}
                    {!homePage && <a href={getRelativeLocaleUrl(locale, "/contact")}>{t("navigation:contact")}</a>}
                </li>
                <li>
                    <button class="submenu-button" aria-haspopup="true">{t("navigation:blog")}</button>
                    <ul class="submenu" aria-label="submenu">
                        <li>
                            <a href={getRelativeLocaleUrl(locale, "/blog")}>Posts</a>
                        </li>
                        <li>
                            <a href={getRelativeLocaleUrl(locale, "/blog/posts/categories")}>Categories</a>
                        </li>
                        <li>
                            <a href={getRelativeLocaleUrl(locale, "/blog/posts/featured")}>Featured posts</a>
                        </li>
                        <li>
                            <a href={getRelativeLocaleUrl(locale, "/blog/posts/")}>All posts</a>
                        </li>
                    </ul>
                </li>
                <LanguageSelector buttonId="languageSelector" dropdownId="languageSelectorDropdown" post={post} />
            </ul>
        </nav>
    </div>
</header>

<style is:global>
    /* Currently has to be global, because of LanguageSelector */

    .nav-dropdown {
        height: var(--header-height);
        transition: 0.4s;

        @media (max-width: 468px) {
            height: auto;
            width: 100%;
            max-height: 0;
            visibility: hidden;
            overflow: hidden;
        }
    }

    body.nav-active .nav-dropdown {
        max-height: 100vh;
        visibility: visible;
    }

    .nav-dropdown > ul {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        height: 100%;

        @media (max-width: 468px) {
            width: 100%;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            margin-bottom: 0.5rem;
            background: rgba(var(--secondary), 1);
            border-radius: 6px;
        }
    }

    .nav-dropdown > ul > li {
        list-style: none;
        position: relative;
        transition: 0.4s;
        box-sizing: border-box;
        height: 100%;
        padding-right: 0.5rem;
        padding-left: 0.5rem;

        @media (max-width: 468px) {
            width: 100%;
            padding: 1rem 0rem 1rem 0rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
    }

    .nav-dropdown ul li {
        a,
        button {
            transition: 0.4s;
            text-decoration: none;
            color: var(--body-color);
            height: 100%;
            width: 100%;
            display: flex;
            gap: 0.3rem;
            align-items: center;

            @media (max-width: 468px) {
                justify-content: center;
            }
        }

        &:hover,
        &:focus-within {
            cursor: pointer;

            > a,
            > button {
                color: rgba(var(--accent), 1);
            }

            .submenu {
                opacity: 1;
                visibility: visible;
                max-height: 100vh;

                @media (max-width: 468px) {
                    margin-top: 1rem;
                }
            }
        }
    }

    .submenu-button {
        cursor: pointer;
        &:after {
            display: inline-block;
            margin-left: 0.255em;
            vertical-align: 0.255em;
            content: "";
            border-top: 0.3em solid;
            border-right: 0.3em solid transparent;
            border-bottom: 0;
            border-left: 0.3em solid transparent;
        }
    }

    .nav-dropdown ul li .submenu {
        position: absolute;
        top: 85%;
        left: 0;
        display: block;
        background: rgba(var(--secondary), 1);
        box-shadow: var(--global-box-shadow);
        border-radius: 6px;
        width: max-content;
        transition: 0.2s ease;
        opacity: 0;
        visibility: hidden;

        @media (max-width: 468px) {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            width: 100%;
            background-color: transparent;
            max-height: 0;
            box-shadow: none;
        }
    }

    .nav-dropdown ul li .submenu li {
        padding: 0.85rem;

        &:hover,
        &:focus-within {
            background: rgba(var(--accent), 1);

            > a,
            > button {
                color: var(--body-color);
            }
        }

        &:first-child:hover,
        &:first-child:focus-within {
            border-radius: 6px 6px 0 0;
        }

        &:last-child:hover,
        &:last-child:focus-within {
            border-radius: 0 0 6px 6px;
        }

        @media (max-width: 468px) {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    }
</style>

<style>
    header {
        width: 100%;
        color: var(--body-color);
        font-weight: 700;
        position: fixed;
        top: 0;
        background: var(--header-bg);
        backdrop-filter: blur(4px);
        z-index: 1010;
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        align-items: center;

        .header-items {
            max-width: var(--page-width);
            padding-left: var(--padding-x);
            padding-right: var(--padding-x);
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            align-items: center;
            width: 100%;
            margin: auto;

            @media (max-width: 468px) {
                flex-direction: column;
            }
        }

        .control {
            display: flex;
            align-items: center;
            height: var(--header-height);

            @media (max-width: 468px) {
                width: 100%;
                justify-content: space-between;
            }
        }

        .brand {
            color: rgba(var(--accent), 1);
            display: flex;
            align-items: center;

            svg {
                margin-right: 6px;
                margin-left: 2px;
                height: 32px;
            }

            h1 {
                font-size: 1rem;
                font-weight: inherit;
                padding: 0;
                margin: 0;
                background: none;
                background-clip: none;
                color: inherit;
            }
        }
    }

    .header-burger-menu {
        display: none;
        align-items: center;
        justify-content: center;
        width: 2.125rem;
        margin-top: auto;
        margin-bottom: auto;

        @media screen and (max-width: 468px) {
            display: flex;
        }
    }

    .header-burger-menu-button {
        position: relative;
        height: 26px;
        width: 40px;
        cursor: pointer;
        background-color: transparent;
    }

    .header-burger-menu-button > span {
        pointer-events: none;
    }

    .header-burger-menu-button.active span {
        opacity: 0;
    }

    .header-burger-menu-button.active.header-burger-menu-button::before,
    .header-burger-menu-button.active.header-burger-menu-button::after {
        top: 40%;
    }

    .header-burger-menu-button.active.header-burger-menu-button::before {
        transform: rotate(45deg);
    }

    .header-burger-menu-button.active.header-burger-menu-button::after {
        transform: rotate(-45deg);
    }

    .header-burger-menu-button span,
    .header-burger-menu-button::before,
    .header-burger-menu-button::after {
        display: block;
        position: absolute;
        height: 5px;
        width: 100%;
        background-color: var(--burger-menu-bg);
        border-radius: 6px;
        opacity: 1;
    }

    .header-burger-menu-button::before,
    .header-burger-menu-button::after {
        content: "";
        transition:
            top 0.35s cubic-bezier(0.23, 1, 0.32, 1),
            transform 0.35s cubic-bezier(0.23, 1, 0.32, 1);
    }

    .header-burger-menu-button span {
        top: 50%;
        transform: translateY(-50%);
    }

    .header-burger-menu-button::before {
        top: 0;
    }

    .header-burger-menu-button::after {
        bottom: 0;
    }
</style>

<script>
    const initNav = () => {
        const navButton = document.querySelector<HTMLDivElement>("#menuButton"),
            navigation = document.querySelector<HTMLElement>("#siteNav"),
            submenus = document.querySelectorAll(".submenu");

        if (navButton === null) {
            return;
        }

        const closeDropdowns = (current: HTMLElement | null) => {
            const openDropdowns = document.querySelectorAll(".nav-dropdown li.active");
            openDropdowns.forEach((d) => {
                if (d === current) {
                    return;
                }
                d.classList.remove("active");
            });
        };

        const collapseDropdowns = (e: MouseEvent) => {
            let target = e.target as HTMLElement;
            const openDropdowns = document.querySelectorAll(".nav-dropdown li.active");

            openDropdowns.forEach((d) => {
                if (d === target) {
                    return;
                }
                d.classList.remove("active");
            });
        };

        const handleSubmenus = () => {
            submenus.forEach((sub) => {
                // Toggle the parent li element
                const submenu = sub.parentElement;
                submenu?.addEventListener("click", (e) => {
                    submenu.classList.toggle("active");
                });

                closeDropdowns(submenu);
            });
        };

        /**
         * Opens/closes navigation menu.
         */
        const openCloseNav = () => {
            navButton.classList.toggle("active");
            document.body.classList.toggle("nav-active");
        };

        /**
         * Closes navigation menu
         */
        const closeNav = () => {
            if (document.body.classList.contains("nav-active")) {
                navButton.classList.remove("active");
                document.body.classList.remove("nav-active");
            }
        };

        // Collapse responsive navbar on click outside or on its child items
        const collapseNav = (e: MouseEvent) => {
            let target = e.target as HTMLElement;

            if (target === navButton) {
                return;
            }

            if (navigation?.contains(target)) {
                return;
            }

            closeNav();
        };

        document.onmouseup = (e) => {
            collapseNav(e);
            collapseDropdowns(e);
        };

        // Run everything
        navButton.addEventListener("click", (e) => {
            e.preventDefault();
            openCloseNav();
        });
        //handleSubmenus();

        console.log("Navigation initialized.");
    };

    document.addEventListener(
        "astro:page-load",
        (e) => {
            initNav();
        },
        { once: false },
    );
</script>
