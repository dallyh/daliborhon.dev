---
import * as m from "$messages";
import { type MarkdownHeading } from "astro";

interface Props {
	headings: MarkdownHeading[];
}

const { headings } = Astro.props;
---

{
	headings.length !== 0 && (
		<>
			<div id="toc">
				<details id="tocDetails">
					<h2>{m.blog__toc()}</h2>
					<summary>{m.blog__open_toc}</summary>
				</details>
			</div>
		</>
	)
}

<script>
	/**
	 * Wraps TOC generated by rehype-toc in details element
	 * This needs to be done because of i18n
	 */
	const wrapToc = () => {
		const details = document.querySelector<HTMLHeadElement>("#tocDetails");

		if (details === null) {
			return;
		}

		const toc = document.querySelector<HTMLElement>(".toc")!;
		details.appendChild(toc);

		toc.style.display = "block";
	};

	wrapToc();

	document.addEventListener("astro:after-swap", () => {
		wrapToc();
	});
</script>

<style is:global>
	.toc {
		display: none;
	}
</style>

<style>
	#toc {
		ol {
			list-style: inside disc;

			li a {
				&:visited {
					color: var(--a-color);
				}
			}
		}

		details {
			cursor: pointer;
			user-select: none;
			display: inline-block;
			list-style: inside disclosure-closed;
			margin-bottom: 1rem;
			background: rgba(var(--secondary), 0.5);
			padding: 0.5rem;
			border-radius: var(--border-radius);
			width: 100%;
			border: var(--border);
			overflow: hidden;

			h2 {
				margin-top: 1rem;
				margin-bottom: 1rem;
			}
		}

		details[open] > summary:first-of-type {
			list-style-type: disclosure-open;
		}
	}
</style>
