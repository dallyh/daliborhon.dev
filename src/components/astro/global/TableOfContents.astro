---
import * as m from "$messages";
import { type MarkdownHeading } from "astro";

interface Props {
	headings: MarkdownHeading[];
}

const { headings } = Astro.props;
---

{
	headings.length !== 0 && (
		<>
			<div id="toc" class="box">
				<details id="tocDetails">
					<h2>{m.blog__toc()}</h2>
					<summary>{m.blog__open_toc}</summary>
				</details>
			</div>
		</>
	)
}

<script>
	/**
	 * Wraps TOC generated by rehype-toc in details element
	 * This needs to be done because of i18n
	 */
	const wrapToc = () => {
		const details = document.querySelector<HTMLHeadElement>("#tocDetails");

		if (details === null) {
			return;
		}

		const toc = document.querySelector<HTMLElement>(".toc")!;
		details.appendChild(toc);

		toc.style.display = "block";
	};

	wrapToc();

	document.addEventListener("astro:after-swap", () => {
		wrapToc();
	});
</script>

<style is:global>
	.toc {
		display: none;
	}

	summary {
		cursor: pointer;

		&:focus {
			outline: none;
			border-color: hsl(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l)) !important;
			box-shadow: var(--bulma-focus-shadow-size) hsla(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l), var(--bulma-focus-shadow-alpha)) !important;
		}
	}
</style>
