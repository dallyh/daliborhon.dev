---
import * as m from "$messages";
import { type MarkdownHeading } from "astro";

interface Props {
	headings: MarkdownHeading[];
}

const { headings } = Astro.props;
---

{
	headings.length !== 0 && (
		<>
			<div id="toc" class="box">
				<details id="tocDetails">
					<h2>{m.blog__toc()}</h2>
					<summary>{m.blog__open_toc}</summary>
				</details>
			</div>
		</>
	)
}

<script>
	/**
	 * Wraps TOC generated by rehype-toc in details element
	 * This needs to be done because of i18n
	 */
	const wrapToc = () => {
		const details = document.querySelector<HTMLHeadElement>("#tocDetails");

		if (details === null) {
			return;
		}

		const toc = document.querySelector<HTMLElement>(".toc")!;
		details.appendChild(toc);

		toc.style.display = "block";
	};

	wrapToc();

	document.addEventListener("astro:after-swap", () => {
		wrapToc();
	});
</script>

<style is:global>
	nav .toc {
		display: none; /* This is generated */
	}

	#toc {
		summary::marker,
		summary::-webkit-details-marker {
			display: none!;
		}

		summary:before {
			content: "";
			border-width: 0.4rem;
			border-style: solid;
			border-color: transparent transparent transparent var(--bulma-box-color);
			position: absolute;
			top: 0.35rem;
			left: 0rem;
			transform: rotate(0);
			transform-origin: 0.2rem 50%;
			transition: 0.25s transform ease;
		}

		details[open] > summary:before {
			transform: rotate(90deg);
		}

		summary {
			padding-left: 1rem;
			position: relative;
			cursor: pointer;
			list-style: none;

			&:focus {
				outline: none;
				border-color: hsl(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l)) !important;
				box-shadow: var(--bulma-focus-shadow-size) hsla(var(--bulma-focus-h), var(--bulma-focus-s), var(--bulma-focus-l), var(--bulma-focus-shadow-alpha)) !important;
			}
		}
	}
</style>
