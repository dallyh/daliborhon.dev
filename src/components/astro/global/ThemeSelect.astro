<theme-select>
	<label class="swap swap-rotate swap-sm btn btn-ghost no-animation">
		<!-- this hidden checkbox controls the state -->
		<input type="checkbox" class="theme-controller" aria-label="Theme change"/>

		<!-- sun icon -->
		<svg class="swap-off h-7 w-7 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
			<path
				d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"
			></path>
		</svg>

		<!-- moon icon -->
		<svg class="swap-on h-7 w-7 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
			<path
				d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"
			></path>
		</svg>
	</label>
</theme-select>

<script>
	// https://github.com/withastro/starlight/blob/main/packages/starlight/components/ThemeSelect.astro
	// Thanks!
	class ThemeSelect extends HTMLElement {
		#storageKey = "theme-preference";
		#themeToggle = this.querySelector("input") as HTMLInputElement;

		connectedCallback() {
			this.#reflectPreference();
			this.#themeToggle?.addEventListener("click", () => this.#onClick());
		}

		#getColorPreference(): string {
			if (localStorage.getItem(this.#storageKey)) {
				return localStorage.getItem(this.#storageKey)!;
			} else {
				return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
			}
		}

		#reflectPreference() {
			document.documentElement.dataset.theme = this.#getColorPreference();
			this.#themeToggle?.setAttribute("aria-label", this.#getColorPreference());
		}

		#setPreference(theme: string) {
			localStorage.setItem(this.#storageKey, theme);
			this.#reflectPreference();
			window.dispatchEvent(new Event("theme-changed"));
		}

		#onClick() {
			const theme = document.documentElement.dataset.theme === "light" ? "dark" : "light";
			this.#setPreference(theme);
		}
	}

	customElements.define("theme-select", ThemeSelect);
</script>

<style is:global>
	.sun-and-moon {
		[data-theme="dark"] & {
			.sun {
				transform: scale(1.75);
			}

			.sun-beams {
				opacity: 0;
			}

			.moon > circle {
				transform: translateX(-7px);

				@supports (cx: 1) {
					transform: translateX(0);
					cx: 17;
				}
			}
		}
	}

	@media (prefers-reduced-motion: no-preference) {
		.sun-and-moon {
			.sun {
				transition: transform 0.5s ease;
			}

			.sun-beams {
				transition:
					transform 0.5s ease,
					opacity 0.5s ease;
			}

			[data-theme="dark"] & {
				.sun {
					transform: scale(1.75);
					transition-timing-function: ease;
					transition-duration: 0.25s;
				}

				.sun-beams {
					transform: rotateZ(-25deg);
					transition-duration: 0.15s;
				}
			}

			.moon > circle {
				transform: translateX(0);
				transition: transform 0.25s ease-out;
			}

			[data-theme="dark"] & {
				.moon > circle {
					transition-delay: 0.25s;
					transition-duration: 0.5s;
				}
			}
		}
	}
</style>

<style>
	.theme-toggle {
		--icon-fill: var(--bulma-navbar-item-color);
		--icon-fill-hover: var(--bulma-navbar-item-color);
		background: none;
		border: none;
		aspect-ratio: 1;
		cursor: pointer;
		touch-action: manipulation;
		-webkit-tap-highlight-color: transparent;
		outline-offset: 5px;
		display: flex;
		justify-content: center;
		align-items: center;

		> svg {
			stroke-linecap: round;
		}
	}

	.sun-and-moon {
		:is(.moon, .sun, .sun-beams) {
			transform-origin: center center;
		}

		:is(.moon, .sun) {
			fill: var(--icon-fill);

			.theme-toggle:is(:hover, :focus-visible) > & {
				fill: var(--icon-fill-hover);
			}
		}

		.sun-beams {
			stroke: var(--icon-fill);
			stroke-width: 2px;

			.theme-toggle:is(:hover, :focus-visible) & {
				stroke: var(--icon-fill-hover);
			}
		}
	}
</style>
