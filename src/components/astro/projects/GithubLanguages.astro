---
import { getCollection } from "astro:content";
import type { Endpoints } from "@octokit/types";
import { githubRestClient } from "@services/github/githubRestClient";

interface Props {
	repository: Endpoints["GET /repos/{owner}/{repo}"]["response"]["data"];
}

const { repository } = Astro.props;

const languagesData = await githubRestClient.repos.listLanguages({ repo: repository.name, owner: repository.owner.login });
const projectLanguages = languagesData.data;
const colors = await getCollection("githubLanguages");

const total = Object.values(projectLanguages).reduce((acc, curr) => acc + curr, 0);
const languages = Object.keys(projectLanguages).map((language) => {
	return {
		language: language,
		percentage: (projectLanguages[language] / total) * 100,
		color: colors.filter((c) => c.id === language)[0].data.color,
	};
});
---

<div class="flex w-full flex-col gap-4">
	<span class="flex h-2 w-full space-x-[2px] overflow-hidden rounded-md">
		{
			languages.map((lang) => (
				<span
					style={{
						backgroundColor: lang.color,
						width: `${lang.percentage}%`,
					}}
				/>
			))
		}
	</span>
	<ul class="flex flex-wrap gap-4 text-[0.825rem]">
		{
			languages.map((lang) => (
				<li class="flex items-center justify-center gap-1">
					<span class="h-2 w-2 rounded-full" style={{ backgroundColor: lang.color }} />
					{lang.language}
				</li>
			))
		}
	</ul>
</div>
