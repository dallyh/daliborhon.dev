---
import { getCollection } from "astro:content";
import type { Endpoints } from "@octokit/types";
import { githubRestClient } from "@services/github/githubRestClient";

interface Props {
	repository: Endpoints["GET /repos/{owner}/{repo}"]["response"]["data"];
}

const { repository } = Astro.props;

const languagesData = await githubRestClient.repos.listLanguages({ repo: repository.name, owner: repository.owner.login });
const projectLanguages = languagesData.data;
const colors = await getCollection("githubLanguages");

const total = Object.values(projectLanguages).reduce((acc, curr) => acc + curr, 0);
const languages = Object.keys(projectLanguages).map((language) => {
	return {
		language: language,
		percentage: (projectLanguages[language] / total) * 100,
		color: colors.filter((c) => c.id === language)[0].data.color,
	};
});
---

<div class="gh-languages">
	<span>
		{
			languages.map((lang) => {
				return <span style={`background-color:${lang.color}; width: ${lang.percentage}%`} />;
			})
		}
	</span>
	<ul>
		{
			languages.map((lang) => {
				return (
					<li>
						<span style={`background-color:${lang.color};`} /> {lang.language}
					</li>
				);
			})
		}
	</ul>
</div>

<style>
	.gh-languages {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		width: 100%;

		> span {
			width: 100%;
			border-radius: 6px;
			display: flex;
			height: 8px;
			overflow: hidden;
			border: var(--border);

			span:not(:first-child) {
				margin-left: 2px;
			}
		}

		> ul {
			display: flex;
			flex-wrap: wrap;
			gap: 1rem;
			font-size: 0.825rem;

			li {
				display: flex;
				justify-content: center;
				align-items: center;
				gap: 0.25rem;
				span {
					width: 0.5rem;
					height: 0.5rem;
					border-radius: 50%;
				}
			}
		}
	}
</style>
