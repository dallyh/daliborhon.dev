---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

interface Props {
    project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

const { href, title, image, projectStartDate, project_tags } = project.data;
const { Content } = await project.render();

const file = await import(`../../../../public${image}`); // Image path is /assets/...Â¨
const img = file.default;
const imgRaw = await import(`${img.src}?raw`);
---

<div class="card">
    <div class="card-content">
        <div class="card-image">
            {img.format === "svg" && <Fragment set:html={imgRaw.default} />}
            {img.format !== "svg" && <Image src={img} alt={title} format="webp" />}
        </div>
        <div class="card-info-wrapper">
            <div class="card-info">
                <div class="card-info-title">
                    <a href={href} target="_blank">{title}</a>
                    <div class="card-info-tags">
                        {
                            project_tags.map(async (tag) => {
                                const curr = await getEntry("project-tags", tag.id);

                                return (
                                    <div class="rounded-tag" style={`background: ${curr.data.bgColor};`}>
                                        {curr.data.title}
                                    </div>
                                );
                            })
                        }
                    </div>
                </div>
                <div class="card-body">
                    <Content />
                </div>
            </div>
        </div>
    </div>
</div>

<style is:global>
    .card-image {
        align-items: center;
        display: flex;
        justify-content: center;
        overflow: hidden;
        height: 120px;
        width: 100px;
        color: var(--body-color);
        opacity: 0.6;

        > img,
        > svg {
            padding: 0.2rem;
            height: 100%;
            width: 100%;
        }

        [data-icon="lemmy-icon"] {
            color: black;
        }
    }
</style>

<style>
    .card {
        background-color: var(--card-bg);
        backdrop-filter: blur(2px);
        display: flex;
        flex-direction: column;
        position: relative;
        box-shadow: var(--global-box-shadow);
        border-radius: 6px;
        padding: 1rem;
        overflow: hidden;
        width: 100%;
        height: max-content;
        border: var(--border);
    }

    .card-content {
        display: flex;
        gap: 1rem;

        @media (max-width: 468px) {
            flex-direction: column;
            align-items: center;
        }
    }

    .card-info-wrapper {
        display: flex;
        flex-grow: 1;
        justify-content: flex-start;
        padding: 0px 1rem;
        width: 100%;
        height: 100%;
    }

    .card-info {
        align-items: flex-start;
        display: flex;
        gap: 10px;
    }

    .card-info-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        font-size: 0.725rem;
        margin-top: 0.5rem;
        color: black;
        font-weight: 600;

        :global(.rounded-tag) {
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
            padding-left: 0.5rem;
            padding-right: 0.5rem;
            border-radius: 8px;
        }
    }

    .card-info {
        display: flex;
        flex-direction: column;

        .card-body {
            color: var(--body-color);
            font-size: 0.85em;
            margin-top: 8px;
        }
    }

    .card-info-title {
        > a {
            font-weight: 600;
            position: relative;
            display: inline-flex;
            min-height: 25px;

            i {
                margin-right: 5px;
            }
        }
    }
</style>
