---
import { PROJECTS } from "@config/blog";
import { loadNamespaces } from "@i18n/i18n";
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import ProjectCard from "./ProjectCard.astro";

interface Props {
    listSize?: number;
}

const { listSize = PROJECTS.recentProjectsSize } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["projects"]);

const projects = await getCollection("projects", ({ data }) => {
    return data.language === locale;
});

const sortedProjects = projects
    .sort((a, b) => {
        return new Date(b.data.projectStartDate).valueOf() - new Date(a.data.projectStartDate).valueOf();
    })
    .slice(0, listSize);
---

<div class="projects-cards-wrapper">
    <div class="cards">
        {
            sortedProjects.map((project) => {
                return <ProjectCard {project} />;
            })
        }
    </div>
</div>

<style>
    .projects-cards-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        position: relative;

        .cards {
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: auto;
            gap: 1rem;
            width: 100%;
            height: 100%;
            justify-content: center;
            align-items: center;
        }
    }
</style>
