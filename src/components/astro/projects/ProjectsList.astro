---
import { PROJECTS } from "@config/blog";
import { loadNamespaces, t } from "@i18n/i18n";
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import ProjectCard from "./ProjectCard.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { Icon } from "astro-icon/components";
import AllEntriesUrl from "@components/astro/global/AllEntriesUrl.astro";

interface Props {
    recentSize?: number;
    listAll?: boolean;
}

const { recentSize = PROJECTS.recentProjectsSize, listAll = false } = Astro.props;

// i18next
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["projects"]);

const projects = await getCollection("projects", ({ data }) => {
    return data.language === locale;
});

const sortedProjects = projects.sort((a, b) => {
    return new Date(b.data.projectStartDate).valueOf() - new Date(a.data.projectStartDate).valueOf();
});

if (!listAll) {
    sortedProjects.slice(0, recentSize);
}

const allEntriesProps = {
    url: getRelativeLocaleUrl(locale, "/projects"),
    urlDescription: t("projects.see_all"),
};
---

<div class="projects">
    <div class="projects-cards-wrapper">
        <ul class="cards">
            {
                sortedProjects.map((project) => {
                    return (
                        <li>
                            <ProjectCard {project} />
                        </li>
                    );
                })
            }
        </ul>
    </div>
    {!listAll && <AllEntriesUrl {...allEntriesProps} />}
</div>

<style>
    .projects {
        display: flex;
        flex-direction: column;
    }

    .projects-cards-wrapper {
        margin-bottom: 1rem;
    }

    .cards {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto;
        gap: 1rem;
        width: 100%;
        height: 100%;
        justify-content: center;
        align-items: center;
    }
</style>
