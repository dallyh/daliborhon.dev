---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

export type CertCard = {
	img: string;
	imgInverted?: string;
	alt: string;
	width?: number;
	height?: number;
};

export interface Props {
	img: string;
	imgInverted?: string;
	alt: string;
	width?: number;
	height?: number;
}

const { img, alt, width = 150, height = 150 / 4, imgInverted = img } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>("/public/assets/**/*.{jpeg,jpg,png,gif,svg}");
if (!images[img]) throw new Error(`"${img}" does not exist in glob: "/public/assets/**/*.{jpeg,jpg,png,gif,svg}`);

if (imgInverted) {
	if (!images[imgInverted]) throw new Error(`"${imgInverted}" does not exist in glob: "/public/assets/**/*.{jpeg,jpg,png,gif,svg}`);
}

const imgProps = {
	alt,
	title: alt,
	width,
	height,
};

const isPrint = Astro.locals.isPrint;
---

{
	isPrint && (
		<li>
			<slot />
		</li>
	)
}

{
	!isPrint && (
		<div class="card card-compact bg-base-200 shadow-xl h-full min-h-32">
			<div class="card-body grid place-items-center items-center text-center justify-center">
				<div>
					<div class="image-normal">
						<Image src={images[img]()} {...imgProps} />
					</div>
					<div class="image-inverted">
						<Image src={images[imgInverted]()} {...imgProps} />
					</div>
				</div>
				<slot />
			</div>
		</div>
	)
}

<style>
	.image-normal,
	.image-inverted {
		display: none;
	}

	:root[data-theme="dark"] {
		.image-inverted {
			display: block;
		}
	}

	:root[data-theme="light"] {
		.image-normal {
			display: block;
		}
	}
</style>
