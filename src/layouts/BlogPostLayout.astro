---
import FormattedDate from "@components/astro/blog/FormattedDate.astro";
import MainLayout from "./MainLayout.astro";
import type { CollectionEntry } from "astro:content";
import { getLocale } from "@i18n/utils";
import TagList from "@components/astro/blog/TagList.astro";
import BreadCrumbs from "@components/astro/blog/BreadCrumbs.astro";
import BreadCrumbsItem from "@components/astro/blog/BreadCrumbsItem.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getOgImageUrl } from "@utils/getOgImageUrl";
import Footer from "@components/astro/global/Footer.astro";
import HeadHrefLangs from "@components/astro/global/HeadHrefLangs.astro";
import Navigation from "@components/astro/global/Navigation.astro";
import { string } from "astro/zod";

interface Props {
    post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const { title, author, description, canonicalURL, pubDateTime, modDatetime } = post.data;

const locale = getLocale(Astro.url);
const ogUrl = getOgImageUrl(locale, post, Astro.url);

const layoutProps = {
    title: `Post - ${title}`,
    author,
    description,
    pubDateTime,
    // This is here because of CMS shenanigans. It saves dates whcih are empty as strings ("").
    modDatetime: typeof modDatetime === "string" ? undefined : modDatetime,
    canonicalURL,
    ogImage: ogUrl,
};
---

<MainLayout {...layoutProps}>
    <HeadHrefLangs post={post} slot="hreflangs" />
    <Navigation post={post} title={layoutProps.title} slot="header" />
    <main>
        <div class="post-header">
            <div class="bread-crumbs">
                <BreadCrumbs>
                    <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/home")} label="Home" />
                    <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/blog")} label="Blog" />
                    <BreadCrumbsItem currentPage={true} label={post.data.title} />
                </BreadCrumbs>
            </div>
            <div class="post-description">
                <p>{post.data.title}</p>
                <p>By {post.data.author}</p>
                <FormattedDate pubDateTime={post.data.pubDateTime} modDatetime={post.data.modDatetime} locale={locale} />
                <div class="post-image">
                    <img src={ogUrl} title={post.data.title} alt={post.data.title} loading="eager" />
                </div>
            </div>
            <div class="tags">
                <TagList post={post} bgColor="rgba(var(--secondary), 1)" justify="center" />
            </div>
        </div>
        <hr />
        <article class="post-md">
            <slot />
        </article>
    </main>
    <Footer />
</MainLayout>

<style>
    .post-description {
        text-align: center;

        p:first-child {
            font-size: 1.7rem;
            font-weight: 700;
            background: var(--accent-gradient) fixed;
            background-clip: text;
            color: transparent;
            padding-bottom: 0.2rem;
            padding-top: 0.2rem;
            margin-top: 1rem;
        }

        .post-image {
            padding: 2rem;
            overflow: hidden;

            img {
                border-radius: 6px;
                object-fit: cover;
                object-position: 50% 50%;
                box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.2);
            }
        }
    }

    .bread-crumbs {
        margin-bottom: 2rem;
    }

    .tags {
        margin-bottom: 2rem;
    }
</style>
