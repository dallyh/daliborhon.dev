---
import MainLayout from "@layouts/MainLayout.astro";
import { loadNamespaces, t } from "@i18n/i18n";
import { getLocale } from "@i18n/utils";
import { getCollection } from "astro:content";
import HeadHrefLangs from "@components/astro/global/HeadHrefLangs.astro";
import Navigation from "@components/astro/global/Navigation.astro";
import Footer from "@components/astro/global/Footer.astro";
import Section from "@components/astro/global/Section.astro";
import { getStaticPaths } from "@i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";
import Category from "@components/astro/blog/Category.astro";
import BreadCrumbs from "@components/astro/blog/BreadCrumbs.astro";
import BreadCrumbsItem from "@components/astro/blog/BreadCrumbsItem.astro";
export { getStaticPaths };

// i18n
const locale = getLocale(Astro.url);
await loadNamespaces(locale, ["blog", "common"]);

const layoutProps = {
    title: `${t("blog.categories")} - Blog`,
    description: t("blog.blog_site_description"),
};
// Categories
const categories = await getCollection("categories");
const sorted = categories === undefined ? undefined : categories.sort((a, b) => a.data.languages[locale].title.localeCompare(b.data.languages[locale].title));
---

<MainLayout {...layoutProps}>
    <HeadHrefLangs slot="hreflangs" />
    <Navigation title={layoutProps.title} slot="header" />
    <main>
        <BreadCrumbs>
            <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/home")} label={t("common.home")} />
            <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/blog")} label="Blog" />
            <BreadCrumbsItem currentPage={true} label={t("blog.categories")} />
        </BreadCrumbs>
        <Section id="categories" isFirstSection sectionTitle={t("blog.categories")} sectionDescription={t("blog.categories_description")}>
            {!sorted && <p>{t("blog.no_categories")}</p>}
            {
                sorted && (
                    <ul class="category-list">
                        {sorted?.map((category) => (
                            <Category {category} />
                        ))}
                    </ul>
                )
            }
        </Section>
    </main>
    <Footer />
</MainLayout>

<style>
    .category-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;

        a {
            color: var(--body-color);
            display: inline-block;

            &:visited {
                color: var(--body-color);
            }

            &:hover {
                color: rgba(var(--accent), 1);
            }
        }
    }
</style>
