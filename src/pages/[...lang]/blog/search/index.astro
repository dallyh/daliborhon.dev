---
import BreadCrumbs from "@components/astro/blog/BreadCrumbs.astro";
import BreadCrumbsItem from "@components/astro/blog/BreadCrumbsItem.astro";
import Search from "astro-pagefind/components/Search";
import Section from "@components/astro/global/Section.astro";
import { getLocale, getStaticPaths } from "@i18n/utils";
import PageLayout from "@layouts/PageLayout.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { t } from "@i18n/i18n";
export { getStaticPaths };
import "@pagefind/default-ui/css/ui.css";

const locale = getLocale(Astro.url);
const layoutProps = {
    title: `Search`,
    description: "Search",
};
---

<PageLayout {...layoutProps}>
    <main>
        <BreadCrumbs>
            <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/home")} label={t("common.home")} />
            <BreadCrumbsItem href={getRelativeLocaleUrl(locale, "/blog")} label="Blog" />
            <BreadCrumbsItem currentPage={true} label="Search blog" />
        </BreadCrumbs>
        <Section id="search" sectionTitle="Search through all posts">
            <div id="pagefind"></div>
        </Section>
    </main>
</PageLayout>

<script>
    // There are curently no types for this package
    import { PagefindUI } from "@pagefind/default-ui";

    let pageFindInstance: any = null;

    function initPagefind() {
        const uiId = "pagefind";
        const ui = document.getElementById(`${uiId}`);
        console.log(ui);

        if (ui === null) {
            return;
        }

        const trailingSlash = import.meta.env.DEV ? "/" : "";

        pageFindInstance = new PagefindUI({
            element: `#${uiId}`,
            showSubResults: true,
            showImages: true,
            processResult: function (result: any) {
                if (result?.meta?.image) {
                    let resultBase = new URL(result.url, String(window.location));
                    let remappedImage = new URL(result.meta.image, resultBase);

                    if (remappedImage.hostname !== window.location.hostname) {
                        result.meta.image = remappedImage.toString();
                    } else {
                        result.meta.image = remappedImage.pathname + trailingSlash;
                    }
                }
            },
        });
    }

    document.addEventListener("astro:after-swap", () => {
        if (pageFindInstance !== null) {
            pageFindInstance.destroy();
        }
    });

    document.addEventListener(
        "astro:page-load",
        () => {
            initPagefind();
        },
        { once: false },
    );
</script>

<style is:global>
    :root {
        --pagefind-ui-scale: 1;
        --pagefind-ui-primary: red;
        --pagefind-ui-text: var(--body-color);
        --pagefind-ui-background: var(--card-bg);
        --pagefind-ui-border: rgba(var(--accent), 1);
        --pagefind-ui-tag: rgba(var(--accent), 1);
        --pagefind-ui-border-width: 0px;
        --pagefind-ui-border-radius: 6px;
        --pagefind-ui-image-border-radius: 6px;
        --pagefind-ui-image-box-ratio: 3 / 2;
        --pagefind-ui-font: unset;
    }

    .pagefind-ui > form > input {
        &:focus-visible {
            outline-color: rgba(var(--accent), 1);
            outline-style: solid;
            outline-width: 1px;
        }
    }

    .page-content {
        min-height: calc(100svh - var(--header-height));
        justify-content: space-between;
    }
</style>
