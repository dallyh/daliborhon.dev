---
import type { CollectionEntry } from "astro:content";
import { getEntries } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import type { Locale } from "@paraglide/runtime";

interface Props {
	post?: CollectionEntry<"posts">;
	tags?: CollectionEntry<"tags">[];
}

const { post, tags } = Astro.props;

const locale = Astro.currentLocale as Locale;
---

<ul class="flex list-none flex-wrap gap-3">
	{
		tags &&
			tags.map((tag) => (
				<li class="badge badge-primary badge-outline hover:bg-primary hover:text-primary-content transition-colors duration-300">
					<a class="no-underline" href={getRelativeLocaleUrl(locale, `/blog/tags/${tag.id}/`)}>
						#{tag.id}
					</a>
				</li>
			))
	}
	{
		post && (
			<>
				{(async () => {
					const relatedTags = await getEntries(post.data.tags);
					return (
						<>
							{relatedTags.map(async (tag) => {
								return (
									<li class="badge badge-primary badge-outline hover:bg-primary hover:text-primary-content transition-colors duration-300">
										<a class="no-underline" href={getRelativeLocaleUrl(locale, `/blog/tags/${tag.id}/`)}>
											#{tag.id}
										</a>
									</li>
								);
							})}
						</>
					);
				})()}
			</>
		)
	}
</ul>
