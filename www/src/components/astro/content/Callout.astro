---
import { m } from "@paraglide/messages";
import { Icon } from "astro-icon/components";

interface Props {
	type: "note" | "success" | "caution" | "danger" | "tip";
	title?: string;
}

const { type, title } = Astro.props;

export const callouts = () => {
	return {
		note: {
			title: m.callout__note_title(),
		},
		success: {
			title: m.callout__success_title(),
		},
		caution: {
			title: m.callout__caution_title(),
		},
		danger: {
			title: m.callout__danger_title(),
		},
		tip: {
			title: m.callout__tip_title(),
		},
	};
};
---

<aside class=`callout callout-${type}`>
	<div class="callout-indicator">
		{
			() => {
				const size = 28;
				switch (type) {
					case "note":
						return <Icon name="heroicons:information-circle" {size} />;
					case "success":
						return <Icon name="heroicons:check-circle" {size} />;
					case "caution":
						return <Icon name="heroicons:exclamation-triangle" {size} />;
					case "danger":
						return <Icon name="heroicons:exclamation-circle" {size} />;
					case "tip":
						return <Icon name="heroicons:light-bulb" {size} />;
					default:
						break;
				}
			}
		}
		<span class="callout-title font-mono">{title ? title : callouts()[type].title}</span>
	</div>
	<div class="callout-content">
		<p>
			<slot />
		</p>
	</div>
</aside>

<style>
	/* This is taken from @microflash/remark-callout-directives/themes/github/index.css and modified, */

	:root {
		--callout-bg: color-mix(in oklab, var(--color-base-300) 60%, transparent);

		--callout-headingFontColor-note: var(--color-info);
		--callout-border-note: var(--color-info);

		--callout-headingFontColor-success: var(--color-success);
		--callout-border-success: var(--color-success);

		--callout-headingFontColor-tip: hsl(277, 76%, 31%);
		--callout-border-tip: hsl(277, 81%, 60%);

		--callout-headingFontColor-caution: var(--color-warning);
		--callout-border-caution: var(--color-warning);

		--callout-headingFontColor-danger: var(--color-error);
		--callout-border-danger: var(--color-error);
	}

	:root[data-theme="dark"] {
		--callout-headingFontColor-tip: hsl(276, 72%, 89%);
		--callout-border-tip: hsl(277, 81%, 60%);
	}

	.callout {
		--calloutheadingFontColor: var(--callout-headingFontColor);
		--callout-border: var(--callout-border);
		border-left: 0.25em solid var(--callout-border);
		padding: 0.5rem 1rem;
		color: inherit;
		background-color: var(--callout-bg);
		margin-top: 1rem;
		margin-bottom: 1rem;
	}

	.callout-indicator {
		display: flex;
		align-items: center;
		line-height: 1;
		margin-bottom: 16px;
		color: var(--calloutheadingFontColor);
	}

	.callout-title {
		font-weight: 600;
		font-size: 1.25rem;
		letter-spacing: 0.025em;
	}

	.callout-indicator > svg:first-of-type {
		margin-right: 0.5rem;
	}

	.callout-content:first-child,
	.callout-content:only-child {
		margin-block-start: 0;
	}

	.callout-content:last-child,
	.callout-content:only-child {
		margin-block-end: 0;
	}

	.callout-note {
		--callout-headingFontColor: var(--callout-headingFontColor-note);
		--callout-border: var(--callout-border-note);
	}

	.callout-success {
		--callout-headingFontColor: var(--callout-headingFontColor-success);
		--callout-border: var(--callout-border-success);
	}

	.callout-caution {
		--callout-headingFontColor: var(--callout-headingFontColor-caution);
		--callout-border: var(--callout-border-caution);
	}

	.callout-danger {
		--callout-headingFontColor: var(--callout-headingFontColor-danger);
		--callout-border: var(--callout-border-danger);
	}

	.callout-tip {
		--callout-headingFontColor: var(--callout-headingFontColor-tip);
		--callout-border: var(--callout-border-tip);
	}
</style>
