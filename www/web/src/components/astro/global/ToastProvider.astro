<script>
	declare global {
		interface ToastOptions {
			message: string;
			type?: "info" | "success" | "warning" | "error";
			duration?: number; // in ms; 0 or negative to keep open
			dismissible?: boolean; // show close button or not
		}

		interface Window {
			showToast: (options: ToastOptions) => void;
		}
	}

	/**
	 * showToast creates an alert element (DaisyUI style)
	 * and appends it to the #toastContainer.
	 */
	function showToast({ message, type = "info", duration = 30000, dismissible = true }: ToastOptions) {
		const toastContainer = document.getElementById("toastContainer");
		if (!toastContainer) return;

		// Create the alert element
		const alertEl = document.createElement("div");

		const variants = {
			info: "alert-info",
			success: "alert-success",
			warning: "alert-warning",
			error: "alert-error",
		};

		alertEl.className = `alert ${variants[type]} shadow-lg cursor-pointer transition-opacity`;

		// Inner content for alert
		alertEl.innerHTML = `
			<span class="flex-1">${message}</span>
			${
				dismissible
					? `
				<button class="btn btn-sm btn-ghost ml-auto" aria-label="Close Toast">
					âœ•
				</button>`
					: ""
			}
		`;

		toastContainer.appendChild(alertEl);

		// Close on click if dismissible
		if (dismissible) {
			const closeBtn = alertEl.querySelector("button");
			if (closeBtn) {
				closeBtn.addEventListener("click", () => {
					fadeOutAndRemove(alertEl);
				});
			}
		}

		// Auto-remove after `duration` milliseconds (if > 0)
		if (duration && duration > 0) {
			setTimeout(() => {
				fadeOutAndRemove(alertEl);
			}, duration);
		}
	}

	/**
	 * A helper to gracefully fade out and remove a toast element
	 */
	function fadeOutAndRemove(element: HTMLElement) {
		element.classList.add("opacity-0");
		// After transition, remove from DOM
		setTimeout(() => {
			element.remove();
		}, 300); // enough time to let the CSS transition end (if any)
	}

	function addToastContainer() {
		let toastContainer = document.getElementById("toastContainer");
		if (!toastContainer) {
			toastContainer = document.createElement("div");
			toastContainer.id = "toastContainer";
			toastContainer.className = "toast toast-top toast-end space-y-2";
			toastContainer.style.zIndex = "9999";
			document.body.appendChild(toastContainer);
		}

		if (!window.showToast) {
			window.showToast = showToast;
		}
	}

	document.addEventListener("astro:after-swap", addToastContainer);

	if (document.readyState === "loading") {
		document.addEventListener("DOMContentLoaded", addToastContainer);
	} else {
		addToastContainer();
	}
</script>
