---
import { getCollection } from "astro:content";
import type { ProjectLanguages } from "./ProjectCard.astro";

interface Props {
	languages: ProjectLanguages;
}

const { languages } = Astro.props;

const colors = await getCollection("githubLanguages");
const total = Object.values(languages).reduce((acc, curr) => acc + curr, 0);
const languagesData = Object.keys(languages).map((language) => {
	return {
		language: language,
		percentage: (languages[language] / total) * 100,
		color: colors.filter((c) => c.id === language)[0].data.color,
	};
});
---

<div class="flex w-full flex-col gap-4">
	<span class="flex h-2 w-full space-x-[2px] overflow-hidden rounded-md">
		{
			languagesData.map((lang) => (
				<span
					style={{
						backgroundColor: lang.color,
						width: `${lang.percentage}%`,
					}}
				/>
			))
		}
	</span>
	<ul id="autoScrollList" class="flex flex-wrap max-w-full gap-4 pb-4 text-[0.825rem]">
		{
			languagesData.map((lang) => (
				<li class="flex items-center justify-center gap-1">
					<span class="h-2 w-2 rounded-full" style={{ backgroundColor: lang.color }} />
					{lang.language}
				</li>
			))
		}
	</ul>
</div>
