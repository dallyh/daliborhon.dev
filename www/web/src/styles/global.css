/*@view-transition {
	navigation: auto;
}*/

:root {
	color-scheme: light;
	--header-height: calc(68px + 1rem);
}

:root[data-theme="dark"] {
	color-scheme: dark;
}

.gsc-main {
	flex-direction: column-reverse !important;
}

html {
	overflow-anchor: none;
	@media (prefers-reduced-motion: no-preference) {
		scroll-behavior: smooth;
	}
}

:target {
	scroll-margin-top: calc(var(--header-height) + 1rem); /* Navbar */
}

a:not(.navbar-item, .btn, .tab, .card-title, .toc-link, .no-underline, .link, .link-primary, .link-accent) {
	text-decoration: underline;
	text-underline-offset: 3px;
	text-decoration-thickness: 1px;
	text-decoration-color: var(--color-primary);
	font-weight: 400;
	color: inherit;

	&:hover {
		text-decoration-color: var(--color-base-content);
	}
}

.card-title:has(a) a,
.breadcrumbs a,
a.card-title {
	text-decoration: none;
	text-decoration-color: unset;
	text-underline-offset: 3px;
	text-decoration-thickness: 1px;
	font-weight: 400;
	color: inherit;

	&:hover {
		text-decoration: underline;
		text-decoration-color: var(--color-primary);
	}
}

.skeleton {
	border: unset;
	color: transparent;
	pointer-events: none;

	&:has(img) {
		border-radius: unset;
		border-start-start-radius: inherit;
		border-start-end-radius: inherit;
		border-end-start-radius: unset;
		border-end-end-radius: unset;
	}

	> * {
		visibility: hidden;
	}
}

/* Has to be global, it is used in an component and also generated by a plugin inside markdown content */
a:has(.external-link-icon) {
	display: inline-flex;

	.external-link-icon {
		vertical-align: super;
		margin-left: 0.2rem;
		margin-top: 0.1rem;
		font-size: 0.6rem;
	}
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
