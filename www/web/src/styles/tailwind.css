@import "tailwindcss" source("../../src/");
@plugin "daisyui" {
	themes: light, dark;
}
@plugin "@tailwindcss/typography";

@theme {
	--default-font-family: "Nunito Variable";
	--default-mono-font-family: "Fira Code Variable", var(--font-mono);
}

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@layer components {
	article-toc {
		toc-item.active {
			background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
			outline-style: none;
			box-shadow:
				0 1px oklch(0% 0 0 / 0.01) inset,
				0 -1px oklch(100% 0 0 / 0.01) inset;
		}
	}
}

@layer utilities {
	h1 {
		@apply text-4xl;
		@apply font-bold;
	}

	h2 {
		@apply text-3xl;
		@apply font-bold;
	}

	h3 {
		@apply text-2xl;
		@apply font-bold;
	}

	h4 {
		@apply text-xl;
		@apply font-bold;
	}

	h5 {
		@apply text-lg;
		@apply font-bold;
	}

	h6 {
		@apply font-bold;
	}

	.menu {
		.dropdown-content {
			margin-top: 0; /* Fixes hoverable dropdowns, introduced somewhere between daisyUI betas */
		}
	}

	.md-content :is(h1, h2, h3, h4, h5, h6) {
		width: max-content;
	}

	.md-content :is(h1, h2, h3, h4, h5, h6):has(.heading-link-icon) {
		@apply flex gap-2;
		transform: translateX(-2rem);
		transition: transform ease 300ms;

		a {
			@apply mt-1 flex justify-center;
			opacity: 0;
			visibility: hidden;
			transition: opacity ease 300ms;

			.heading-link-icon {
				@apply btn btn-soft btn-primary btn-xs;

				i {
					float: left;
					text-decoration: none;
					position: relative;
					font-size: 0.5rem;
				}
			}
		}

		&:hover {
			transform: translateX(0rem);
			a {
				opacity: 1;
				visibility: visible;
			}
		}
	}

	.prose :not(.expressive-code) code:not(a code),
	.prose a:has(> code) {
		padding: 0.125rem 0.375rem;
		font-weight: 400;
		@apply bg-base-300 text-sm;

		&::before {
			content: unset;
		}

		&::after {
			content: unset;
		}
	}

	.prose a:has(code) {
		padding: 0.125rem 0.375rem;
		@apply bg-base-300;

		code {
			font-weight: 400;
			@apply text-sm;

			&::before {
				content: unset;
			}

			&::after {
				content: unset;
			}
		}
	}
}
