zerops:
    - setup: libsqld
      run:
          base: ubuntu@24.04
          envVariables:
              LIBSQL_BOTTOMLESS_ENDPOINT: ${dbstorage_apiUrl}
              LIBSQL_BOTTOMLESS_BUCKET: ${dbstorage_bucketName}
              LIBSQL_BOTTOMLESS_AWS_DEFAULT_REGION: eu-central-1
              LIBSQL_BOTTOMLESS_AWS_ACCESS_KEY_ID: ${dbstorage_accessKeyId}
              LIBSQL_BOTTOMLESS_AWS_SECRET_ACCESS_KEY: ${dbstorage_secretAccessKey}
          prepareCommands:
              - curl --proto '=https' --tlsv1.2 -LsSf https://github.com/tursodatabase/libsql/releases/download/libsql-server-v0.24.31/libsql-server-installer.sh | sh
              - mv /root/.cargo/bin/sqld /usr/local/bin/sqld
          start: sqld --enable-bottomless-replication --http-listen-addr 0.0.0.0:8080
          ports:
              - port: 8080
                httpSupport: true

    - setup: web
      build:
          base: nodejs@22
          envVariables:
              GITHUB_API_AUTH_TOKEN: ${RUNTIME_GITHUB_API_AUTH_TOKEN}
              OA_GITHUB_CLIENT_SECRET: ${RUNTIME_OA_GITHUB_CLIENT_SECRET}
              OA_GITHUB_CLIENT_ID: ${RUNTIME_OA_GITHUB_CLIENT_ID}
              APP_VERSION_NAME: ${RUNTIME_appVersionName}
              ASTRO_DB_REMOTE_URL: ${RUNTIME_ASTRO_DB_REMOTE_URL}
              UPTIME_API_TOKEN: ${RUNTIME_UPTIME_API_TOKEN}
              PREVIEW: false
          buildCommands:
              - pnpm config set inject-workspace-packages true
              - pnpm install
              - pnpm run build:web
              - pnpm run deploy:web
          cache:
              - .turbo
              - www/web/node_modules/.astro
          deployFiles:
              - deploy/~
      run:
          base: nodejs@22
          ports:
              - port: 4321
                httpSupport: true
          envVariables:
              HOST: 0.0.0.0
              APP_VERSION_NAME: ${appVersionName}
              ASTRO_DB_REMOTE_URL: http://libsqld:8080
              PREVIEW: false
          start: npm run start
          healthCheck:
              httpGet:
                  port: 4321
                  path: /api/status

    - setup: webpreview
      build:
          base: nodejs@22
          envVariables:
              GITHUB_API_AUTH_TOKEN: ${RUNTIME_GITHUB_API_AUTH_TOKEN}
              OA_GITHUB_CLIENT_SECRET: ${RUNTIME_OA_GITHUB_CLIENT_SECRET}
              OA_GITHUB_CLIENT_ID: ${RUNTIME_OA_GITHUB_CLIENT_ID}
              APP_VERSION_NAME: ${RUNTIME_appVersionName}
              ASTRO_DB_REMOTE_URL: ${RUNTIME_ASTRO_DB_REMOTE_URL}
              UPTIME_API_TOKEN: ${RUNTIME_UPTIME_API_TOKEN}
              PREVIEW: true # Builds preview posts
          buildCommands:
              - pnpm config set inject-workspace-packages true
              - pnpm install
              - pnpm run build:web
              - pnpm run deploy:web
          cache:
              - .turbo
              - www/web/node_modules/.astro
          deployFiles:
              - deploy/~
      run:
          base: nodejs@22
          ports:
              - port: 4321
                httpSupport: true
          envVariables:
              HOST: 0.0.0.0
              APP_VERSION_NAME: ${appVersionName}
              ASTRO_DB_REMOTE_URL: file:db/dev.db
              PREVIEW: true # Builds preview posts
          start: npm run start
          healthCheck:
              httpGet:
                  port: 4321
                  path: /api/status
